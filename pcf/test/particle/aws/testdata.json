{
  "hosted-zone-apply": [
    {
      "pcf_name": "pcf_hosted_zone",
      "flavor": "route53_hosted_zone",
      "aws_resource": {
        "Name": "www.hoooooos.com.",
        "custom_config": {
          "Tags": [
            {
              "Key": "Owner",
              "Value": "Hoo"
            },
            {
              "Key": "UID",
              "Value": "abc123"
            }
          ]
        },
        "VPC": {
          "VPCRegion": "us-east-1",
          "VPCId": "vpc-12345"
        },
        "CallerReference": "sdfa6df5a4sdf5asd7f9asd6fa5s",
        "HostedZoneConfig": {
          "Comment": "hoo",
          "PrivateZone": true
        }
      }
    },
    {},
    [
      "mock_route53"
    ]
  ],
  "sqs-apply": [
    {
      "pcf_name": "pcf-queue",
      "flavor": "sqs",
      "aws_resource": {
        "QueueName": "test_SQS_queue.fifo",
        "Attributes": {
          "DelaySeconds": "0",
          "MaximumMessageSize": "262144",
          "MessageRetentionPeriod": "345600",
          "Policy": "AWS policy",
          "ReceiveMessageWaitTimeSeconds": "20",
          "VisibilityTimeout": "43200",
          "KmsMasterKeyId": "enc/sqs",
          "KmsDataKeyReusePeriodSeconds": "300",
          "FifoQueue": "true",
          "ContentBasedDeduplication": "true",
          "QueueArn": "arn:aws:sqs:us-east-1:123456789012:test_SQS_queue.fifo"
        },
        "Tags": {
          "test_tag": "value",
          "remove_tag": "bye"
        }
      }
    },
    {
      "aws_resource": {
        "Attributes": {
          "MaximumMessageSize": "261111",
          "MessageRetentionPeriod": "345611"
        },
        "Tags": {
          "test_tag": "change value"
        }
      }
    },
    [
      "mock_sqs"
    ]
  ],
  "cloud-front-apply": [
    {
      "pcf_name": "pcf_cloudfront",
      "flavor": "cloudfront",
      "aws_resource": {
        "Comment": "pcf-cloud-front2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cloud-front1"
          }
        ],
        "CallerReference": "sdfa6df5a4sdf5asd7f9asd6fa5sdcf7a8oilwkerdk0",
        "Origins": {
          "Quantity": 1,
          "Items": [
            {
              "Id": "S3-wah",
              "DomainName": "wah.s3.amazonaws.com",
              "S3OriginConfig": {
                "OriginAccessIdentity": ""
              }
            }
          ]
        },
        "DefaultCacheBehavior": {
          "TargetOriginId": "S3-wah",
          "ForwardedValues": {
            "QueryString": false,
            "Cookies": {
              "Forward": "none"
            }
          },
          "TrustedSigners": {
            "Enabled": false,
            "Quantity": 0
          },
          "ViewerProtocolPolicy": "allow-all",
          "MinTTL": 50
        },
        "Enabled": true,
        "PriceClass": "PriceClass_100"
      }
    },
    {},
    [
      "placebo",
      "cloudfront/replay"
    ]
  ],
  "cloudwatch-event-apply": [
    {
      "pcf_name": "pcf_cloudwatch_event",
      "flavor": "cloudwatch_events",
      "aws_resource": {
        "Name": "pcf_test_events",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Description": "pcf cloudwatch events"
      }
    },
    {
      "aws_resource": {
        "State": "DISABLED"
      }
    },
    [
      "mock_events"
    ]
  ],
    "cloudwatch-log-apply": [
    {
      "pcf_name": "pcf_cloudwatch_log",
      "flavor": "cloudwatch_logs",
      "aws_resource": {
        "logGroupName": "pcfLog",
        "tags": {
          "tagA": "string",
          "removed": "bye"
        }
      }
    },
    {
      "aws_resource": {
        "tags": {
          "tagA": "changed",
          "new": "hi"
        }
      }
    },
    [
      "placebo",
      "cloudwatch/replay"
    ]
  ],
  "dynamodb-apply": [
    {
      "pcf_name": "pcf_dynamodb",
      "flavor": "dynamodb_table",
      "aws_resource": {
        "AttributeDefinitions": [
          {
            "AttributeName": "Post",
            "AttributeType": "S"
          },
          {
            "AttributeName": "PostDateTime",
            "AttributeType": "S"
          }
        ],
        "TableName": "pcf_test_table",
        "KeySchema": [
          {
            "AttributeName": "Post",
            "KeyType": "HASH"
          }
        ],
        "LocalSecondaryIndexes": [
          {
            "IndexName": "LastPostIndex",
            "KeySchema": [
              {
                "AttributeName": "Post",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "PostDateTime",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 10,
          "WriteCapacityUnits": 10
        }
      }
    },
    {
      "aws_resource": {
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 15,
          "WriteCapacityUnits": 15
        }
      }
    },
    [
      "mock_dynamodb2"
    ]
  ],
  "launch-config-apply": [
    {
      "pcf_name": "lc-test",
      "flavor": "launch_configuration",
      "aws_resource": {
        "LaunchConfigurationName": "lc-test",
        "InstanceType": "t2.nano",
        "KeyName": "test-key",
        "IamInstanceProfile": "test-role",
        "ImageId": "test-id"
      }
    },
    {},
    [
      "mock_autoscaling"
    ]
  ],
    "elb-apply": [
    {
      "pcf_name": "elb-pcf",
      "flavor": "elb",
      "aws_resource": {
        "LoadBalancerName": "elb-pcf",
        "Scheme": "internal",
        "Listeners": [
          {
            "Protocol": "tcp",
            "LoadBalancerPort": 80,
            "InstancePort": 8080,
            "SSLCertificateId": "None"
          }
        ]
      }
    },
    {},
    [
      "mock_elb"
    ]
  ],
  "ecs-cluster-apply": [
    {
        "pcf_name": "pcf_ecs_cluster",
        "flavor": "ecs_cluster",
        "aws_resource": {
            "clusterName": "core"
        }
    },
    {},
    [
      "mock_ecs"
    ]
  ],
  "ecs-task-def-apply": [
    {
      "pcf_name": "gg",
      "flavor": "ecs_task_definition",
      "aws_resource": {
        "family": "gg-fam",
        "containerDefinitions": [
          {
            "name": "wp",
            "memory": 60000,
            "essential": true,
            "portMappings": [
              {
                "hostPort": 0,
                "containerPort": 6006,
                "protocol": "tcp"
              }
            ],
            "mountPoints": [
            ],
            "environment": [
              {
                "name": "environment-name",
                "value": "environment-value"
              }
            ],
            "privileged": true,
            "image": "dockerhub.com/dockerimage",
            "cpu": 3800
          }
        ]
      }
    },
    {
      "aws_resource": {
        "containerDefinitions": [
          {
            "privileged": false
          }
        ]
      }
    },
    [
      "mock_ecs"
    ]
  ],
    "efs-apply": [
    {
      "pcf_name": "pcf_efs",
      "flavor": "efs",
      "aws_resource": {
        "custom_config": {
          "instance_name": "efs-instance"
        },
        "CreationToken": "pcfFileSystem",
        "PerformanceMode": "generalPurpose"
      }
    },
    {},
    [
      "placebo",
      "efs/replay"
    ]
  ],
    "emr-cluster-group-apply": [
    {
      "pcf_name": "pcf_cluster",
      "flavor": "emr_cluster",
      "aws_resource": {
        "ReleaseLabel": "emr-5.19.0",
        "Instances": {
          "KeepJobFlowAliveWhenNoSteps": true,
          "InstanceGroups": [
            {
              "InstanceRole": "MASTER",
              "Name": "master",
              "InstanceCount": 1,
              "InstanceType": "m3.xlarge"
            }
          ]
        },
        "JobFlowRole": "EMR_EC2_DefaultRole",
        "Name": "test",
        "ServiceRole": "EMR_DefaultRole"
      }
    },
    {
      "aws_resource": {
        "Instances": {
          "InstanceGroups": [
            {
              "InstanceRole": "MASTER",
              "Name": "master",
              "InstanceCount": 2,
              "InstanceType": "m3.xlarge"
            }
          ]
        }
      }
    },
    [
      "mock_emr"
    ]
  ],
  "emr-cluster-fleet-apply": [
    {
      "pcf_name": "pcf_cluster",
      "flavor": "emr_cluster",
      "aws_resource": {
        "ReleaseLabel": "emr-5.19.0",
        "Instances": {
          "KeepJobFlowAliveWhenNoSteps": true,
          "InstanceFleets": [
            {
              "InstanceFleetType": "MASTER",
              "Name": "master",
              "TargetOnDemandCapacity": 1,
              "InstanceTypeConfigs": [
                {
                  "InstanceType": "m3.xlarge"
                }
              ]
            }
          ]
        },
        "JobFlowRole": "EMR_EC2_DefaultRole",
        "Name": "test",
        "ServiceRole": "EMR_DefaultRole"
      }
    },
    {
      "aws_resource": {
        "Instances": {
          "InstanceFleets": [
            {
              "InstanceFleetType": "MASTER",
              "Name": "master",
              "TargetOnDemandCapacity": 2,
              "InstanceTypeConfigs": [
                {
                  "InstanceType": "m3.xlarge"
                }
              ]
            }
          ]
        }
      }
    },
    [
      "mock_emr"
    ]
  ],
    "kms-apply": [
    {
        "pcf_name": "kms_unit_test",
        "flavor": "kms_key",
        "aws_resource": {
            "custom_config": {
                "key_name": "pcf_unit_test"
            }
        }
    },
    {},
    [
      "mock_kms"
    ]
  ],
  "s3-apply": [
    {
      "pcf_name": "pcf_s3_bucket",
      "flavor": "s3_bucket",
      "aws_resource": {
        "Bucket": "pcf_test_bucket",
        "custom_config": {
          "Tags": {
            "Name": "pcf-s3-test"
          }
        }
      }
    },
    {
      "aws_resource": {
        "custom_config": {
          "Tags": {
            "Name": "pcf-s3-test1"
          }
        }
      }
    },
    [
      "mock_s3"
    ]
  ],
  "vpc-apply": [
    {
        "pcf_name": "pcf_vpc",
        "flavor": "vpc",
        "aws_resource": {
            "custom_config":{
                "vpc_name":"test"
            },
            "CidrBlock":"10.0.0.0/16"
        }
    },
    {},
    [
      "mock_ec2"
    ]
  ]
}

